AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Resources:
  ProbeRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: ytmp3-downloader-role-policy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - "execute-api:Invoke"
                Resource: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${BackendAPI}/*/GET/hello"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"

  Probe:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      CodeUri: probe/
      Handler: index.handler
      Runtime: nodejs18.x
      Role: !GetAtt ProbeRole.Arn
      Environment:
        Variables:
          API_ID: !Ref BackendAPI

  BackendAPIHandler:
    Type: AWS::Serverless::Function
    Properties:
      PackageType: Zip
      CodeUri: backend-api/
      Handler: index.handler
      Runtime: nodejs18.x
      Policies:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
  
  BackendAPI:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: backend-api
      ProtocolType: HTTP
      CorsConfiguration:
        AllowHeaders: ["*"]
        AllowMethods: ["OPTIONS", "GET"]
        AllowOrigins: ["*"]
      Version: v1.0.0

  BackendAPIIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref BackendAPI
      Description: Lambda Integration
      IntegrationType: AWS_PROXY
      IntegrationUri: !Join
        - ""
        - - "arn:"
          - !Ref "AWS::Partition"
          - ":apigateway:"
          - !Ref "AWS::Region"
          - ":lambda:path/2015-03-31/functions/"
          - !GetAtt BackendAPIHandler.Arn
          - "/invocations"
      IntegrationMethod: POST
      PayloadFormatVersion: "2.0"

  BackendAPIHandlerRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref BackendAPI
      RouteKey: "GET /hello"
      AuthorizationType: AWS_IAM 
      Target: !Join
        - ""
        - - "integrations/"
          - !Ref BackendAPIIntegration

  BackendAPIDefaultStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      StageName: $default
      ApiId: !Ref BackendAPI

  Deployment:
    Type: "AWS::ApiGatewayV2::Deployment"
    DependsOn:
      - BackendAPIHandlerRoute
    Properties:
      ApiId: !Ref BackendAPI
      StageName: $default

  BackendAPIHandlerPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt BackendAPIHandler.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref "AWS::Region"
          - ":"
          - !Ref "AWS::AccountId"
          - ":"
          - !Ref BackendAPI
          - "/*/GET/hello"
